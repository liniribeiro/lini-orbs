version: 2.1


orbs:
  orb-tools: circleci/orb-tools@11.2.0
  shellcheck: circleci/shellcheck@3.1


parameters:
  run-hello:
    type: boolean
    default: false
  run-packages:
    type: boolean
    default: false


jobs:
  validate-orb:
    working_directory: ~/app
    docker:
      - image: cimg/python:3.9
    description: Validate an orb
    parameters:
      path:
        type: string
        description: The path to the orb
    steps:
      - checkout
      - run:
          name: Install circleci
          command: |
            sudo chown -R circleci:circleci /usr/local/
            curl https://raw.githubusercontent.com/CircleCI-Public/circleci-cli/master/install.sh --fail --show-error | bash
      - run:
          name: Validate orb
          command: |
            circleci orb validate << parameters.path >>/orb.yml


  publish-orb:
    working_directory: ~/app
    docker:
      - image: cimg/python:3.9
    parameters:
      path:
        type: string
        description: The path to the orb
    steps:
      - checkout
      - run:
          name: Install circleci
          command: |
            sudo chown -R circleci:circleci /usr/local/
            curl https://raw.githubusercontent.com/CircleCI-Public/circleci-cli/master/install.sh --fail --show-error | bash
      - run:
          name: publish orb
          command: |
            echo "1"
            if [[ -f "<< parameters.path >>/orb_version.txt" ]]; then
                # This is a specific version
                VERSION=$(<"<< parameters.path >>/orb_version.txt")
                echo "New version: $VERSION"
                CURRENT_VERSION=$(circleci orb info potato/<< parameters.path >>  --token "$CIRCLE_OIDC_TOKEN" | grep "Latest" | cut -d' ' -f2)
                echo "Current version: $CURRENT_VERSION"            
                if [[ "$VERSION" != "$CURRENT_VERSION" ]]; then
                    circleci orb publish << parameters.path >>/orb.yml "$VERSION" --token "$CIRCLE_OIDC_TOKEN"
                else
                  echo "$VERSION is already published"
                fi
            fi

workflows:
  hello-world-p:
    when: << pipeline.parameters.run-hello >>
    jobs:
      - validate-orb:
          path: hello-world-p
      - publish-orb:
          path: hello-world-p
          requires:
           - validate-orb
          context: orb-publishing

  packages:
    when: << pipeline.parameters.run-packages >>
    jobs:
      - validate-orb:
          path: packages
      - publish-orb:
          path: packages
          requires:
           - validate-orb
          context: orb-publishing
